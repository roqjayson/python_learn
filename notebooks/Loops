{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Learning Python Loops: `for` and `while`\n\nIn this notebook, we'll learn about the two primary types of loops in Python: `for` and `while`. Loops are used to repeat a block of code multiple times.\n\n## Objectives\n- Understand how to use `for` loops to iterate over sequences.\n- Understand how to use `while` loops to repeat code until a condition changes.\n","metadata":{}},{"cell_type":"markdown","source":"## For Loop\n\nA `for` loop is used to iterate over a sequence (such as a list, tuple, or string) or a range of numbers. Here's the basic syntax:\n\n```python\nfor variable in sequence:\n    # Code to execute\n    \n```\n\nLet's start with some examples.\n","metadata":{}},{"cell_type":"code","source":"# Example 1: Iterating Over a List\nfruits = [\"apple\", \"banana\", \"cherry\"]\n\nfor fruit in fruits:\n    print(fruit)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-07T16:51:13.176819Z","iopub.execute_input":"2024-09-07T16:51:13.177359Z","iopub.status.idle":"2024-09-07T16:51:13.192230Z","shell.execute_reply.started":"2024-09-07T16:51:13.177283Z","shell.execute_reply":"2024-09-07T16:51:13.190811Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Your turn, print all the names in the list below.","metadata":{}},{"cell_type":"code","source":"names = [\"Alice\", \"Bob\", \"Charlie\", \"Diana\"]\n\n# Enter for loop here","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Iterating Over Ranges\n\nYou can use the `range()` function to generate a sequence of numbers. ","metadata":{}},{"cell_type":"code","source":"for number in range(5):  # This will iterate from 0 to 4\n    print(number)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T16:52:39.139117Z","iopub.execute_input":"2024-09-07T16:52:39.139850Z","iopub.status.idle":"2024-09-07T16:52:39.145421Z","shell.execute_reply.started":"2024-09-07T16:52:39.139804Z","shell.execute_reply":"2024-09-07T16:52:39.144309Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Your turn, print numbers from 3 to 8.","metadata":{}},{"cell_type":"code","source":"# Enter code here","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Iterating Over Ranges with Start and Step\n\nYou can also specify a start value and a step value with the `range()` function:","metadata":{}},{"cell_type":"code","source":"for number in range(2, 10, 2):  # This will iterate from 2 to 8, stepping by 2\n    print(number)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T16:53:57.379969Z","iopub.execute_input":"2024-09-07T16:53:57.380439Z","iopub.status.idle":"2024-09-07T16:53:57.387003Z","shell.execute_reply.started":"2024-09-07T16:53:57.380397Z","shell.execute_reply":"2024-09-07T16:53:57.385691Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Your turn, print numbers from 10 to 1, stepping by -2","metadata":{}},{"cell_type":"code","source":"# Enter code here","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## While Loop\n\nA `while` loop repeatedly executes a block of code as long as a condition is true. Here's the basic syntax:\n\n```python\nwhile condition:\n    # Code to execute\n","metadata":{}},{"cell_type":"markdown","source":"Let's see some examples.","metadata":{}},{"cell_type":"code","source":"# Example 1: Basic While Loop\ncount = 0\nwhile count < 5:\n    print(count)\n    count += 1\n","metadata":{"execution":{"iopub.status.busy":"2024-09-07T16:55:44.195469Z","iopub.execute_input":"2024-09-07T16:55:44.195897Z","iopub.status.idle":"2024-09-07T16:55:44.202054Z","shell.execute_reply.started":"2024-09-07T16:55:44.195858Z","shell.execute_reply":"2024-09-07T16:55:44.200907Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Your turn, countdown from 5 to 0","metadata":{}},{"cell_type":"code","source":"# Enter code here","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Common Patterns\n\nWhile loops can be used for various tasks, such as waiting for a condition to be met:","metadata":{}},{"cell_type":"code","source":"import random # this is an imported module called random that contains functions or methods that can produce or generate random values\n\n# Example 2: Random Number Guessing Game\nsecret_number = random.randint(1, 10) # We use random.randint() method to generate a secret number from 1 to 10\nguess = None \n\nwhile guess != secret_number: # while the guess is not equal to the secret number, it will keep asking the user to guess and give hints along the way depending on if condition.\n    guess = int(input(\"Guess the number between 1 and 10: \"))\n    if guess < secret_number:\n        print(\"Too low!\")\n    elif guess > secret_number:\n        print(\"Too high!\")\n    else:\n        print(\"Congratulations! You guessed it right!\")\n","metadata":{"execution":{"iopub.status.busy":"2024-09-07T16:58:45.466215Z","iopub.execute_input":"2024-09-07T16:58:45.466657Z","iopub.status.idle":"2024-09-07T16:58:52.610722Z","shell.execute_reply.started":"2024-09-07T16:58:45.466616Z","shell.execute_reply":"2024-09-07T16:58:52.609479Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"\nYour turn, recreate the code above but make the range a bit more challenging. Generate a number to guess from 1 to 100.\n","metadata":{}},{"cell_type":"code","source":"# Enter your code here","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Practice Exercises\n\n1. **For Loop Exercise**:\n   Write a `for` loop that prints all the even numbers from 0 to 20.\n","metadata":{}},{"cell_type":"code","source":"# Your code here","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"2. **While Loop Exercise**: Write a `while` loop that prints numbers from 10 to 1, decrementing by 1 each time.","metadata":{}},{"cell_type":"code","source":"# Your code here","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"3. Combined Loop Exercise: Create a list of numbers from 1 to 10. Use a `for` loop to print each number squared, and use a `while` loop to print each number cubed.","metadata":{}},{"cell_type":"code","source":"# Your code here","metadata":{},"execution_count":null,"outputs":[]}]}
